package com.tommyhasselman.termsconditions.model;

import java.util.List;
import java.util.ArrayList;
import java.util.Random;

/** Class Box that compares the contents of the box/parcel to what should be in the box/parcel */
public class Box extends GameObject {

    private List<OrderItem> boxContains = new ArrayList<OrderItem>();
    private List<OrderItem> boxShouldContain = new ArrayList<OrderItem>();
    private boolean diff;
    private boolean validated;
    /* Value that determines the chance that a random item is going to be generated in boxShouldContain */
    int chanceValue = 4;

    /** Box constructor initialises both boxContains and boxShouldContain with items */
    public Box (int length) {
        diff = false;
        /* Fills the box with random items generated by the BasicItem class */
        for(int i=0;i < length; i++ ){
            boxContains.add(new BasicItem());
        }
        /* Determines what the box should contain. There is a 50% chance that
         * each item is the same as the item actually present in the box */
        Random rand = new Random();
        for (int j=0;j< length;j++){
            int sameItem = rand.nextInt(chanceValue);
            /* Generates a random item in boxShouldContain at a rate of 25% */
            if (sameItem >= 1){
                boxShouldContain.add(boxContains.get(j));
            } else {
                boxShouldContain.add(new BasicItem());
                diff = true;
            }
        }
    }

    public List<OrderItem> getBoxContains() {
        return boxContains;
    }

    public List<OrderItem> getBoxShouldContain() {
        return boxShouldContain;
    }

    public boolean isValidated() {
        return validated;
    }

    public void setValidated(boolean validated) {
        this.validated = validated;
    }

    public int getChanceValue() {
        return chanceValue;
    }

    public void setChanceValue(int chanceValue) {
        this.chanceValue = chanceValue;
    }

    public boolean isDiff() {
        return diff;
    }
}
